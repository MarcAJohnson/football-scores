name: Child

on:
  workflow_call:
    inputs:
      key_vault_name:
        description: 'Name of key vault'
        type: string
        required: true
      key_vault_objects:
        description: 'An array of objects with each object containing info on key vault secrets'
        type: string
        required: true

jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Inspect JSON input
        run: |
          echo '${{ inputs.key_vault_objects }}' > secrets.json
          cat -A secrets.json
      
      # - name: Validate JSON
      #   run: |
      #     jq . secrets.json

      # - name: Parse JSON Array and Fetch Secrets
      #   run: |
      #     echo '${{ inputs.key_vault_objects }}' > secrets.json
      #     secrets=$(jq -c '.[]' secrets.json)

      #     while IFS= read -r item; do
      #       secret_name=$(echo "$item" | jq -r '.secretName')
      #       env_var=$(echo "$item" | jq -r '.envVar')

      #       # Fetch the secret from Key Vault
      #       SECRET_VALUE=$(az keyvault secret show --name "${secret_name}" --vault-name "${{ inputs.key_vault_name }}" --query value -o tsv 2>/dev/null || echo "null")

      #       # Handle null secret values
      #       if [ "$SECRET_VALUE" == "null" ] || [ -z "$SECRET_VALUE" ]; then
      #         echo "⚠️ Warning: Secret '$secret_name' not found or is null"
      #       else
      #         echo "::add-mask::$SECRET_VALUE" # Mask the secret in logs
      #         echo "$env_var=$SECRET_VALUE" >> $GITHUB_ENV # Set as environment variable
      #       fi
      #     done <<< "$secrets"